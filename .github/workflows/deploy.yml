# name: Android CI

# on: [push, pull_request]


# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3

#     - name: set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         cache: gradle

#     - name: Grant execute permission for gradlew
#       run: chmod +x gradlew
#     - name: Build with Gradle
#       run: ./gradlew assembleDebug
          
#     - name: upload artifacts
#       uses: actions/upload-artifact@v3
#       with:
#          name: app-debug.apk
#          path: app/build/outputs/apk/debug/app-debug.apk
         
#     - name: build a zip file
#       uses: montudor/action-zip@v1
#       with:
#         args: zip -qq -r tests.zip tests        
#     - uses: actions/upload-artifact@v2
#       with:
#         name: tests.zip
#         path: tests/
         

#   deploy:
#      needs: build
#      runs-on: ubuntu-latest
     
#      steps:

#      - name: configure aws credentials
#        uses: aws-actions/configure-aws-credentials@master
#        with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-west-2
        
#      - name: download artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: tests.zip
      
#      - name: test
#        uses: realm/aws-devicefarm/test-application@master
#        with:
#         name: test_applications
#         project_arn: ${{ secrets.PROJECT_ARN }}
#         device_pool_arn: ${{ secrets.AWS_DEVICE_POOL_ARN }}
#         #app_file: debug 
#         app_type: ANDROID_APP
#         test_type: BUILTIN_EXPLORER
# #         test_package_file: ./tests.zip
#         test_package_type: APPIUM_PYTHON_TEST_PACKAGE

       
#     - name: schedule a test run
#       id: schedule                
#       uses: realm/aws-devicefarm/schedule-run@master
#       with:
#         name: first_run
#         project_arn: ${{secrets.PROJECT_ARN}}
#         device_pool_arn: ${{secrets.AWS_DEVICE_POOL_ARN}}
#         app_arn: ${{steps.upload-app.outputs.arn}}
#         test_type: BUILTIN_EXPLORER
        
#     - name: get status of run
#       uses: realm/aws-devicefarm/get-run@master
#       with:
#         run_arn: ${{steps.schedule.outputs.arn}}
      
 

      
  
