name: Android CI

on: [push, pull_request]


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install jq tool
      run: |
       sudo apt-get update
       sudo apt-get install jq
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build --build-cache
      
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
      
    - name: upload to aws devicefarm
      id: upload
      run: |
          token = $(aws devicefarm create-upload --project-arn ${{secrets.PROJECT_ARN}} --name app-debug.apk --type ANDROID_APP | jq '.upload.arn')
          echo "::set-output name=arn::$token"
      #uses: realm/aws-devicefarm/create-upload@master
      #id: upload-app
      #with:
       #project_arn: ${{secrets.PROJECT_ARN}}
       #name: app-debug.apk
       #device_pool_arn: ${{secrets.AWS_DEVICE_POOL_ARN}}
       #app_file: app-debug.apk
       #type: ANDROID_APP
      
       
    - name: schedule a test run
      id: schedule
      run: |
          token1 = $(aws devicefarm schedule-run --project-arn ${{secrets.PROJECT_ARN}} --app-arn ${{steps.upload.outputs.arn}} --device-pool-arn ${{secrets.AWS_DEVICE_POOL_ARN}} --test type=BUILTIN_EXPLORER | jq '.run.arn')
           echo "::set-output name=arn::$token1"   
      #uses: realm/aws-devicefarm/schedule-run@master
      #with:
        #name: schedule_run
        #project_arn: ${{secrets.PROJECT_ARN}}
        #device_pool_arn: ${{secrets.AWS_DEVICE_POOL_ARN}}
        #app_arn: ${{steps.upload-app.outputs.arn}}
        #test_type: BUILTIN_EXPLORER
        
    - name: get status of run
      run: |
        aws devicefarm get-run --arn ${{steps.schedule.outputs.arn}}
 

      
  
